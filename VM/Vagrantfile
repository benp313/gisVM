# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
  
  currentEnvironment = ENV['AWS_ENV'] || 'DEV'
  config.ssh.username = "ubuntu"
  
  if currentEnvironment.downcase == 'dev'
    config.vm.box = "Ubuntu-16.04-64-Desktop"

    config.ssh.insert_key = true

    config.vm.box_check_update = true

    config.vm.network "private_network", type: "dhcp"

    dirname = File.basename(Dir.getwd)
    config.vm.hostname = dirname

    config.vm.provider "virtualbox" do |v|
      v.memory = "4096"
      v.name = config.vm.hostname
      v.gui = true
    end
  else
    config.vm.provider :aws do |aws, override|
      aws.access_key_id = ENV['AWS_ACCESS_KEY_ID']
      aws.secret_access_key = ENV['AWS_SECRET_ACCESS_KEY']
      aws.keypair_name = ENV['AWS_KEYNAME']
      
      if currentEnvironment.downcase == 'staging'
        aws.instance_type = "t1.micro"
        aws.tags[:'AWSEnvironment'] = 'Staging'
      elsif currentEnvironment.downcase == 'prod'
        aws.instance_type = "t1.micro"
        aws.tags[:'AWSEnvironment'] = 'Prod'
      elsif currentEnvironment.downcase == 'test'
        aws.instance_type = "t1.micro"
        aws.tags[:'AWSEnvironment'] = 'Test'
      else
        aws.instance_type = "t2.nano"
        aws.tags[:'AWSEnvironment'] = 'WRONG'
      end

      aws.ami = "ami-71d91a1c"  # trusty

      aws.region = "us-east-1"

      override.vm.box = "dummy"
#       override.ssh.username = "ubuntu"
      override.ssh.private_key_path = ENV['AWS_KEYPATH']

      aws.tags = { 'Ansible' => 'Yes',
                   'Node' => 'Yes',
                   'Tier' => 'Infra',
                   'Name' => 'dummy' }

    end
  end

  #
  # Run Ansible from the Vagrant Host
  #
  config.vm.provision "ansible" do |ansible|
    if currentEnvironment.downcase == 'dev'
      ansible.groups = {
        "tag_QGIS_Yes" => ["default"]
      }
    else
      ansible.inventory_path = "/usr/local/etc/ansible/hosts"
    end
    ansible.limit = "tag_QGIS_Yes"
    ansible.playbook = "../ansible/site.yml"
  end

end

